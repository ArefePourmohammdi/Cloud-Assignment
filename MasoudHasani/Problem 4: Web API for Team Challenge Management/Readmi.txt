Masoud Hasani 40121243


Develop a Web API for Challenge Management:
(i) Create API endpoints that:
(a) Assign a specific CTF container to a team based on a team ID and a challenge ID.
(b) Remove a CTF container from a team using the team ID and the challenge ID.
(c) the address of the container have to be in the response
-->
	main.py
	to test it :
		1. write the docker which we want to handle it
		2. build image : docker build -t ctf_challenge_1 . 
		(its name is for example ctf_challenge_1)
		3. to postman : 
			(A) POST http://127.0.0.1:8000/assign/?team_id=team1&challenge_id=1
			(B) DELETE http://127.0.0.1:8000/remove/?team_id=team1&challenge_id=1



Integrate with a Database for Persistent Storage:
(i) Update this database from the API when containers are assigned or removed and active containers.
-->

Use Celery with Redis for Background Task Processing:
(i) Configure Celery to use Redis as the message broker.
-->

(ii) Write Celery tasks that:
(a) Start a Docker container for a specified CTF challenge and link it to a team.
-->

(b) Stop and remove a Docker container that is linked to a team and a challenge.
-->



Test the API Using Postman:
(i) Use Postman (or a similar tool) to send requests to your API endpoints for assigning and removing containers.
-->

(ii) Confirm that the API responds correctly and that containers are started or stopped. Also check that your database updates correctly.
-->

